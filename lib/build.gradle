/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.1/userguide/building_java_projects.html
 */
//import org.gradle.api.file.DuplicatesStrategy


plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}
sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:29.0-jre'

    // Charting api/runtime
    implementation group: 'org.jfree', name: 'jfreechart', version: '1.0.17'
// persistence API
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.0.0'
    implementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '3.0.2'
// DBMS
    implementation group: 'org.apache.derby', name: 'derby', version: '10.15.2.0'
    implementation group: 'org.apache.derby', name: 'derbyshared', version: '10.15.2.0'

}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
//sourceSets  {
//    // this may be needed to make entity classes visible to the persistence scanner
//    sourceSets.main.output.resourcesDir = sourceSets.main.java.outputDir
//}

//jar {
//    manifest {
//        attributes 'Main-Class': 'edu.touro.mco152.bm.App'
//    }
//}
jar {
    manifest {
        attributes "Main-Class": "edu.touro.mco152.bm.App"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task customFatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "edu.touro.mco152.bm.App"
    }
    archiveFileName.set('badbm.jar')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
